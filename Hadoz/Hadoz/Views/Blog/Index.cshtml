@{
    ViewBag.Title = "Blog - Beyond The Gray Area";
}

<div class="maintitle">
    <h1>Hadi's Blog</h1>
    <div class="mainsubtitle">Beyond they Gray Area</div>
</div>

<div class="separator"></div>


<!-- Blog -->
<div class="blog">

    <div data-bind="foreach: BlogPosts">
        <div class="post">
            <h2><a href="#" data-bind="text: Title"></a></h2>
            <div class="post-meta">
                <span class="author">By <a href="#">Hadi Wirontono</a></span><br/>
                <span class="date" data-bind="text: CreateDate"></span><br/>
                <span class="comments">Comments: <a href="#">35</a></span><br/>
                <span class="metatags" data-bind="foreach: Tags">
                    <a href="#" data-bind="text: TagKey"> </a><span data-bind="visible: $index() < $parent.Tags().length - 1">,</span>
                </span>
            </div>
            <div class="post-entry">
                <div data-bind="html: Body"></div>
                <a href="blog_post.html"><div class="readmore">Read more</div></a>
            </div>
        </div>
    </div>
    
    <div class="separator-small"></div>

    <!-- Pagination -->
    <div class="pagination">
        <a href="#" class="prev">Previous</a>
        <a href="#">1</a>
        <span class="current">2</span>
        <a href="#">3</a>
        <a href="#">4</a>
        <a href="#" class="next">Next</a>
    </div><!-- /Pagination -->

</div><!-- /Blog -->

<!--Widgets -->
<div class="widgetside">
    <!-- Search Widget -->
    @Html.Partial("~/Views/Blog/_WidgetSearch.cshtml", null)

    <!-- Blog Categories Widget -->
    @Html.Partial("~/Views/Blog/_WidgetCategories.cshtml", null)

    <!-- Text Widget -->
    @Html.Partial("~/Views/Blog/_WidgetText.cshtml", null)

    <!-- Tabs Widget -->
    @Html.Partial("~/Views/Blog/_WidgetTabs.cshtml", null)

    <!-- Accordion Widget -->
    @Html.Partial("~/Views/Blog/_WidgetAccordion.cshtml", null)

    <!-- Twitter Feed Widget -->
    @Html.Partial("~/Views/Blog/_WidgetTwitterFeed.cshtml", null)

    <!-- Photo Stream Widget -->
    @Html.Partial("~/Views/Blog/_WidgetFlickrFeed.cshtml", null)
</div><!--/Widgets -->


<div class="floatlimit"></div>


<script type="text/javascript">

    var BlogPost = function (PostID, Title, Body, Excerpt, CreateDate, UpdateDate, Status, AuthorID, Categories, Tags) {
        var self = this;

        self.PostID = ko.observable(PostID);
        self.Title = ko.observable(Title);
        self.Body = ko.observable(Body);
        self.Excerpt = ko.observable(Excerpt);
        self.CreateDate = ko.observable(CreateDate);
        self.UpdateDate = ko.observable(UpdateDate);
        self.Status = ko.observable(Status);
        self.AuthorID = ko.observable(AuthorID);
        self.Categories = ko.observableArray(Categories);
        self.Tags = ko.observableArray(Tags);
        self.CountOfTag = ko.computed(function () {
            return self.Tags().length - 1;
        });
    };

    var BlogPostViewModel = function () {
        var self = this;

        self.BlogPosts = new ko.observableArray();

        self.getBlogPosts = function () {
            var url = '@Url.Action("GetAllBlogPosts", "Blog")';
            $.post(url, function (data, textStatus) {
                //console.log(data);
                $.each(data.BlogPosts, function (key) {
                    self.BlogPosts.push(new BlogPost(
                        data.BlogPosts[key].PostID,
                        data.BlogPosts[key].Title,
                        data.BlogPosts[key].Body,
                        data.BlogPosts[key].Excerpt,
                        data.BlogPosts[key].CreateDate,
                        data.BlogPosts[key].UpdateDate,
                        data.BlogPosts[key].Status,
                        data.BlogPosts[key].AuthorID,
                        data.BlogPosts[key].Categories,
                        data.BlogPosts[key].Tags
                    ));
                });

                //console.log(self.BlogPosts());
            });
        };
    };

    $(function () {
        var bpvm = new BlogPostViewModel();
        bpvm.getBlogPosts();
        ko.applyBindings(bpvm);
    });
</script>